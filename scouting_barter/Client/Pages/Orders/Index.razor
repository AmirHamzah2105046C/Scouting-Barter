@page "/orders/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title">Orders</h3>

@if (Orders == null)
{
    <div class="alert alert-info">Loading Orders...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>ID</th>
                <th>Date</th>
                <th>Customer</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Orders)
            {
                <tr>
                    <td>@order.Id</td>
                    <td>@order.OrderDate</td>
                    <td>@order.Customer.CustName</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Order> Orders;

    protected async override Task OnInitializedAsync()
    {
        Orders = await _client.GetFromJsonAsync<List<Order>>($"{Endpoints.OrdersEndpoint}");
    }
    async Task Delete(int orderId)
    {
        var order = Orders.First(q => q.Id == orderId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {order.Customer.CustName}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.OrdersEndpoint}/{orderId}");
            await OnInitializedAsync();
        }
    }
}
